pipeline {
    agent any
    stages {
        stage('Git Checkout') {
            steps {
                git url: 'https://github.com/chinnidhi/assignment.git', branch: 'main'
            }
        }
        stage('Terraform Initialization') {
            steps {
                dir('terraform') {
                    withCredentials([
                        string(credentialsId: 'aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
                        string(credentialsId: 'aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
                    ]) {
                        sh 'terraform init'
                    }
                }
            }
        }
        stage('Terraform Apply') {
            steps {
                dir('terraform') {
                    withCredentials([
                        string(credentialsId: 'aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
                        string(credentialsId: 'aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
                    ]) {
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }
        stage('Fetch Public IP & Create Inventory') {
            steps {
                dir('terraform') {
                    script {
                        def public_ip = sh(script: "terraform output -raw public_ip", returnStdout: true).trim()
                        if (!public_ip || public_ip == "null") {
                            error "Failed to fetch public IP. Check Terraform output."
                        }
                        writeFile file: '../ansible/inventory.ini', text: "[webserver]\n${public_ip} ansible_user=ubuntu"
                    }
                }
            }
        }
        stage('Run Ansible Playbook') {
            steps {
                dir('ansible') {
                    sh 'ansible-playbook -i inventory.ini play1.yml'
                }
            }
        }
    }
}

